// <auto-generated />
using System;
using EconomyMonitor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EconomyMonitor.Data.Migrations
{
    [DbContext(typeof(AppRepository))]
    [Migration("20220605222535_AddDatePeriodConfigurationsTable")]
    partial class AddDatePeriodConfigurationsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0-preview.4.22229.2");

            modelBuilder.Entity("EconomyMonitor.Data.Entities.DatePeriodConfigurationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MonthDay")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MonthDayType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("DatePeriodConfigurations");
                });

            modelBuilder.Entity("EconomyMonitor.Data.Entities.DatePeriodEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("EndingDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Income")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("StartingDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DatePeriods");
                });

            modelBuilder.Entity("EconomyMonitor.Data.Entities.PeriodSplitEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DatePeriodOptionId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MonthDay")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MonthDayType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DatePeriodOptionId");

                    b.ToTable("PeriodSplitEntity");
                });

            modelBuilder.Entity("EconomyMonitor.Data.Entities.SpendingQuotaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DatePeriodOptionId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Quota")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DatePeriodOptionId");

                    b.ToTable("SpendingQuotaEntity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.DataProtectionKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FriendlyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Xml")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DataProtectionKeys");
                });

            modelBuilder.Entity("EconomyMonitor.Data.Entities.PeriodSplitEntity", b =>
                {
                    b.HasOne("EconomyMonitor.Data.Entities.DatePeriodConfigurationEntity", "DatePeriodOption")
                        .WithMany("PeriodSplits")
                        .HasForeignKey("DatePeriodOptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("DatePeriodOption");
                });

            modelBuilder.Entity("EconomyMonitor.Data.Entities.SpendingQuotaEntity", b =>
                {
                    b.HasOne("EconomyMonitor.Data.Entities.DatePeriodConfigurationEntity", "DatePeriodOption")
                        .WithMany("SpendingQuotas")
                        .HasForeignKey("DatePeriodOptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("DatePeriodOption");
                });

            modelBuilder.Entity("EconomyMonitor.Data.Entities.DatePeriodConfigurationEntity", b =>
                {
                    b.Navigation("PeriodSplits");

                    b.Navigation("SpendingQuotas");
                });
#pragma warning restore 612, 618
        }
    }
}
